{"version":3,"file":"stories-Requirements-stories.3cd9a07276960486f4cf.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AACA","sources":["webpack://storybook-js/./src/stories/Requirements.stories.js"],"sourcesContent":["import { fn } from \"@storybook/test\";\nimport React, { useState } from \"react\";\nimport { Requirements } from \"../components/Requirements\";\n\nexport default {\n  title: \"Example/Requirements\",\n  component: Requirements,\n  parameters: {\n    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/configure/story-layout\n    layout: \"centered\",\n  },\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: [\"autodocs\"],\n  // More on argTypes: https://storybook.js.org/docs/api/argtypes\n  argTypes: {\n    backgroundColor: { control: \"color\" },\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n  args: { onClick: fn() },\n};\n\nconst RequirementStory = () => {\n  const [valid, setValid] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const passwordRequirements = [\n    {\n      text: \"Must be at least 8 characters\",\n      validator: (val) => val.length >= 8,\n    },\n    {\n      text: \"Must contain at least one number\",\n      validator: (val) => /\\d/g.test(val),\n    },\n    {\n      text: \"Must contain at least one lower-case letter\",\n      validator: (val) => /[a-z]/g.test(val),\n    },\n    {\n      text: \"Must contain at least one upper-case letter\",\n      validator: (val) => /[A-Z]/g.test(val),\n    },\n  ];\n\n  return (\n    <div className=\"form\">\n      <h1>Signup</h1>\n\n      <Requirements\n        value={password}\n        requirements={passwordRequirements}\n        onValidChange={(isValid) => setValid(isValid)}\n      />\n\n      <input\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        placeholder=\"Password\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n\n      <button disabled={!valid || !username}>Sign Up</button>\n    </div>\n  );\n};\nexport const Primary = {\n  render: () => <RequirementStory />,\n};\n"],"names":[],"sourceRoot":""}